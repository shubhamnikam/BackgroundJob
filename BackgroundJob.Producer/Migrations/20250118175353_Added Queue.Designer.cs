// <auto-generated />
using System;
using BackgroundJob.Common.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackgroundJob.Producer.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20250118175353_Added Queue")]
    partial class AddedQueue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackgroundJob.Common.Entities.BusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("BackgroundJob.Common.Entities.BusQueueEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDistributed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExtracted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQueued")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkerCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkerPickup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkerProcessing")
                        .HasColumnType("bit");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectTypeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ObjectTypeId");

                    b.ToTable("BusQueue");
                });

            modelBuilder.Entity("BackgroundJob.Common.Entities.FlightEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("BackgroundJob.Common.Entities.FlightQueueEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDistributed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExtracted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQueued")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkerCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkerPickup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkerProcessing")
                        .HasColumnType("bit");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectTypeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ObjectTypeId");

                    b.ToTable("FlightQueue");
                });

            modelBuilder.Entity("BackgroundJob.Common.Entities.ObjectTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ObjectTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Flight"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bus"
                        });
                });

            modelBuilder.Entity("BackgroundJob.Common.Entities.BusQueueEntity", b =>
                {
                    b.HasOne("BackgroundJob.Common.Entities.ObjectTypeEntity", "ObjectType")
                        .WithMany("BusQueues")
                        .HasForeignKey("ObjectTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ObjectType");
                });

            modelBuilder.Entity("BackgroundJob.Common.Entities.FlightQueueEntity", b =>
                {
                    b.HasOne("BackgroundJob.Common.Entities.ObjectTypeEntity", "ObjectType")
                        .WithMany("FlightQueues")
                        .HasForeignKey("ObjectTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ObjectType");
                });

            modelBuilder.Entity("BackgroundJob.Common.Entities.ObjectTypeEntity", b =>
                {
                    b.Navigation("BusQueues");

                    b.Navigation("FlightQueues");
                });
#pragma warning restore 612, 618
        }
    }
}
